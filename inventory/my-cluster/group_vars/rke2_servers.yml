---
# Primary RKE2 server configuration parameters. Remove the curly braces ( {} ) and add your configuration.
# See https://docs.rke2.io/install/install_options/server_config/ for all configuration options.
rke2_config: {}

# Example of possible rke2_config.
rke2_config:
  selinux: true
  profile: cis-1.6
  kube-controller-manager-arg:
  - "tls-min-version=VersionTLS12"
  - "tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
  kube-scheduler-arg:
  - "tls-min-version=VersionTLS12"
  - "tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
  kube-apiserver-arg:
  - "tls-min-version=VersionTLS12"
  - "tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
  - "enable-admission-plugins=ValidatingAdmissionWebhook,NodeRestriction,PodSecurityPolicy"
  - "request-timeout=300s"
#  # Enable only when auditing is enabled, blocks API when audit fails
  #- "audit-log-mode=blocking-strict"
#
#  kubelet-arg:
#  - "feature-gates=DynamicKubeletConfig=false"
#  - "protect-kernel-defaults=true"
#  - "streaming-connection-idle-timeout=5m"
#
#  # Available in RKE2 1.21
  etcd-extra-env:
  - "ETCD_AUTO_TLS=false"
  - "ETCD_PEER_AUTO_TLS=false"
#
#  write-kubeconfig-mode: "0640"

# (data) Folder to hold state (default: "/var/lib/rancher/rke2") 
#  data-dir: "/opt/rancher/rke2"

#--kubelet-path value       (experimental/agent) Override kubelet binary path [$RKE2_KUBELET_PATH]
#  kubelet-path: ""

#  With taints, Node won't be ready, deployment will fail.
#  node-taint:
#  - "node-role.kubernetes.io/controlplane=true:NoSchedule"
#  - "node-role.kubernetes.io/etcd=true:NoExecute"

  disable: 
  - "rke2-ingress-nginx"

  cni: "calico"

# cluster-domain - use cluster.local, do not use real domain name.
#  cluster-domain: "cluster.local"

  cluster-cidr: "10.42.0.0/20"
  service-cidr: "10.43.0.0/20"
  cluster-dns: "10.43.0.10"

# 10.42.0.0/20 - 10.42.0.0 - 10.42.15.255: 4096
# 10.42.0.0/21 - 10.42.0.0 - 10.42.7.255: 2048
# 10.42.0.0/22 - 
# 10.42.0.0/18 - 10.42.0.0 - 10.42.63.255: 16384
# 10.42.0.0/16 - 10.42.0.0 - 10.42.255.255: 65536


#   --kube-apiserver-image value                  (image) Override image to use for kube-apiserver [$RKE2_KUBE_APISERVER_IMAGE]
#   --kube-controller-manager-image value         (image) Override image to use for kube-controller-manager [$RKE2_KUBE_CONTROLLER_MANAGER_IMAGE]
#   --kube-proxy-image value                      (image) Override image to use for kube-proxy [$RKE2_KUBE_PROXY_IMAGE]
#   --kube-scheduler-image value                  (image) Override image to use for kube-scheduler [$RKE2_KUBE_SCHEDULER_IMAGE]
#   --pause-image value                           (image) Override image to use for pause [$RKE2_PAUSE_IMAGE]
#   --runtime-image value                         (image) Override image to use for runtime binaries (containerd, kubectl, crictl, etc) [$RKE2_RUNTIME_IMAGE]
#   --etcd-image value                            (image) Override image to use for etcd [$RKE2_ETCD_IMAGE]


# See https://kubernetes.io/docs/tasks/debug-application-cluster/audit/
# Add a policy configuration file by specifying the file path on the control host
# audit_policy_config_file_path: "{{ playbook_dir }}/sample_files/audit-policy.yaml"

# See https://docs.rke2.io/install/containerd_registry_configuration/
# Add a registry configuration file by specifying the file path on the control host
# registry_config_file_path: "{{ playbook_dir }}/sample_files/registries.yaml"

# See https://docs.rke2.io/helm/#automatically-deploying-manifests-and-helm-charts
# Add manifest files by specifying the directory path on the control host
# manifest_config_file_path: "{{ playbook_dir }}/sample_files/manifest/"
